name: (Only MAC intel) Build and Upload Electron App to Cloudflare R2
on:
  workflow_dispatch:

env:
  R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
  R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
  R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  R2_BUCKET: i18n

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #macos-13是intel，详情看这里：https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        os: [ macos-13 ]
        node-version: [ 20.11.1 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install
        timeout-minutes: 20


      - name: Build Electron App
        run: |
          yarn dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false


      #过滤需要的文件
      #      - name: Filter Windows build artifacts
      #        if: matrix.os == 'windows-latest'
      #        run: |
      #          mkdir filtered
      #          mv dist/*.exe filtered/
      #          mv dist/*.blockmap filtered/
      #          mv dist/latest.yml filtered/
      #          Remove-Item -Recurse -Force dist\*
      #          mv filtered/* dist/

      #过滤需要的文件
      - name: Filter macOS build artifacts
        if: matrix.os == 'macos-13'
        run: |
          mkdir filtered
          mv dist/*.dmg filtered/
          mv dist/*.blockmap filtered/
          mv dist/latest-mac.yml filtered/
          rm -rf dist/*
          mv filtered/* dist/


      #上传工件供下载和其他用途，当前暂时不需要，也占用额度
      #      - name: Upload Artifacts
      #        uses: actions/upload-artifact@v2
      #        with:
      #          name: electron-app-${{ matrix.os }}
      #          path: dist/*

      #      - name: Install wrangler
      #        run: npm uninstall -g @cloudflare/wrangler && npm install -g wrangler

      #      - name: Upload to Cloudflare R2
      #        env:
      #          R2_ACCOUNT_ID: ${{ env.R2_ACCOUNT_ID }}
      #          R2_ACCESS_KEY_ID: ${{ env.R2_ACCESS_KEY_ID }}
      #          R2_SECRET_ACCESS_KEY: ${{ env.R2_SECRET_ACCESS_KEY }}
      #          CLOUDFLARE_API_TOKEN: ${{ env.CLOUDFLARE_API_TOKEN }}
      #        run: |
      #          for file in dist/*; do
      #            wrangler r2 object put autoi18n/$(basename $file) --file $file
      #          done


        # 包上传到r2
      - name: R2 Directory Upload
        uses: willfurstenau/r2-dir-upload@main
        with:
          accountid: ${{ env.R2_ACCOUNT_ID }}
          accesskeyid: ${{ env.R2_ACCESS_KEY_ID }}
          secretaccesskey: ${{ env.R2_SECRET_ACCESS_KEY }}
          bucket: ${{ env.R2_BUCKET }}
          source: ${{ github.workspace }}/dist
          destination: /releases/intel/

